version: "3.8"
volumes:
  prometheus-data: {}
  grafana-data: {}
services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    networks:
      - infra-net
    volumes:
      - type: bind
        source: ./prometheus
        target: /etc/prometheus
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-lifecycle"
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=31d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    user: "0"
    ports:
      - "9091:3000"
    volumes:
      - type: bind
        source: ./grafana/provisioning/datasources
        target: /etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin # change this default value
      - GF_SECURITY_ADMIN_PASSWORD=admin # change this default value
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - infra-net
  node_exporter:
    image: raymondmm/node-exporter
    container_name: node_exporter
    environment:
      - NODE_ID={{.Node.ID}}
    volumes:
      - /etc/hostname:/etc/nodename:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /mnt/docker-cluster:/mnt/docker-cluster:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/TZ:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'
    ports:
      - 9100:9100
    networks:
      - infra-net
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

networks:
  infra-net: